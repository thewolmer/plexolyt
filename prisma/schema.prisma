// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Billboard {
  id         String     @id @map("_id")
  label      String     @unique
  imageUrl   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[]
}

model Category {
  id          String    @id @map("_id")
  name        String    @unique
  description String
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Color {
  id        String    @id @map("_id")
  name      String    @unique
  hex       String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Length {
  id        String    @id @map("_id")
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Width {
  id String @id @map("_id")

  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id          String   @id @map("_id")
  name        String   @unique
  price       String
  stock       String
  description String
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  colorId    String
  color      Color          @relation(fields: [colorId], references: [id])
  lengthId   String
  length     Length         @relation(fields: [lengthId], references: [id])
  widthId    String
  width      Width          @relation(fields: [widthId], references: [id])
  isFeatured Boolean        @default(false)
  isArchived Boolean        @default(false)
  images     ProductImage[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

model ProductImage {
  id        String   @id @default(uuid()) @map("_id")
  imageUrl  String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
