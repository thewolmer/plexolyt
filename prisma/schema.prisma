// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Billboard {
  id         String     @id @default(cuid()) @map("_id")
  slug       String     @unique
  label      String     @unique
  imageUrl   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  categories Category[]
}

model Category {
  id          String    @id @default(cuid()) @map("_id")
  slug        String    @unique
  name        String    @unique
  description String
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Color {
  id        String    @id @default(cuid()) @map("_id")
  slug      String    @unique
  name      String    @unique
  hex       String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Length {
  id        String    @id @default(cuid()) @map("_id")
  slug      String    @unique
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Width {
  id        String    @id @default(cuid()) @map("_id")
  slug      String    @unique
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id           String         @id @default(cuid()) @map("_id")
  slug         String         @unique
  name         String         @unique
  price        String
  stock        String
  description  String
  categorySlug String
  category     Category       @relation(fields: [categorySlug], references: [slug])
  colorSlug    String
  color        Color          @relation(fields: [colorSlug], references: [slug])
  lengthSlug   String
  length       Length         @relation(fields: [lengthSlug], references: [slug])
  widthSlug    String
  width        Width          @relation(fields: [widthSlug], references: [slug])
  isFeatured   Boolean        @default(false)
  isArchived   Boolean        @default(false)
  images       ProductImage[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model ProductImage {
  id        String   @id @default(cuid()) @map("_id")
  imageUrl  String
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
